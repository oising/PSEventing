[
  {
    "Id": "41869",
    "ThreadId": "12824",
    "Html": "\r\nHello,<br /><br />I am trying to use the eventing lirary to read data from a Serial Port using the System.IO.Ports.SerialPort class.  I have sucessfully declared the object and connected the event library using connect-eventlistener.  I get back the colllection of DataReceived events from the port, but am stuck in trying to read the actual data returned.<br /><br />I am relatively new at PowerShell and  .NET framework, any help would be appreciated.<br /><br />Thanks,<br /><br />Bob<br /><br />PS - Here's a transcript:<br /><br />PS C:\\PoSHeventing&gt; $port<br /><br /><br />BaseStream             : System.IO.Ports.SerialStream<br />BaudRate               : 1200<br />BreakState             : False<br />BytesToWrite           : 0<br />BytesToRead            : 21<br />CDHolding              : False<br />CtsHolding             : False<br />DataBits               : 8<br />DiscardNull            : False<br />DsrHolding             : False<br />DtrEnable              : False<br />Encoding               : System.Text.ASCIIEncoding<br />Handshake              : None<br />IsOpen                 : True<br />NewLine                : <br /><br />Parity                 : None<br />ParityReplace          : 63<br />PortName               : COM1<br />ReadBufferSize         : 4096<br />ReadTimeout            : -1<br />ReceivedBytesThreshold : 1<br />RtsEnable              : False<br />StopBits               : One<br />WriteBufferSize        : 2048<br />WriteTimeout           : -1<br />Site                   : <br />Container              : <br /><br /><br /><br />PS C:\\PoSHeventing&gt; get-eventbinding port<br /><br />VariableName                  EventName                     TypeName                                          Listening<br />------------                  ---------                     --------                                          ---------<br />port                          DataReceived                  SerialPort                                             True<br /><br /><br />PS C:\\PoSHeventing&gt; $events<br />PS C:\\PoSHeventing&gt; $event<br /><br />Occurred                      Source                        Name                          Args                         <br />--------                      ------                        ----                          ----                         <br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br /><br /><br />PS C:\\PoSHeventing&gt; $event<a href=\"http://www.codeplex.com/PSEventing/Wiki/View.aspx?title=0\">0</a><br /><br />Occurred                      Source                        Name                          Args                         <br />--------                      ------                        ----                          ----                         <br />7/20/2007 8:24:13 AM          System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br />",
    "PostedDate": "2007-07-20T05:39:59.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "42174",
    "ThreadId": "12824",
    "Html": "\r\nHi Rob,<br /><br />I don't really know a lot about working with serial ports, but I've attempted to translate a working c# into powershell script using this source: <a href=\"http://mark.michaelis.net/Blog/TheBasicsOfSystemIOPortsSerialPort.aspx\" class=\"externalLink\">http://mark.michaelis.net/Blog/TheBasicsOfSystemIOPortsSerialPort.aspx<span class=\"externalLinkIcon\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\"></span></a><br /><br />it appears the general idea is to wait on the datareceived events then read the waiting data by calling the ReadExisting method on the port object itself:<br /><br /><span class=\"codeInline\" style=\"font-family:Consolas, Courier New, Courier, Monospace;\">$data = $port.ReadExisting()</span><br /><br />I've updated the old 0.5 release's wrapper functions that should make life a bit easier for you. Download the \"eventhandlers.ps1\" script from the 1.0 release page and try:<br /><br /><pre style=\"background-color:#ECECEC; border:dashed .1em #3E62A6; font-family:Consolas, Courier New, Courier, Monospace; font-size:1em; margin-top:0; padding:.5em; height:auto; overflow:auto; overflow-x:auto; overflow-y:auto;\">\r\nPS &gt; . .\\eventhandlers.ps1\r\nPS &gt; add-eventhandler (get-variable port) DataReceived { $port.ReadExisting() } \r\nPS &gt; do-event\r\n</pre>This should then wait on events and call the scriptblock when the \"datareceived\" event arrives, which reads from your port and outputs the data to the pipeline.<br /><br />I've updated the homepage with some info on these helper functions.<br /><br />Have fun!<br /><br />",
    "PostedDate": "2007-07-23T11:13:01.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "42289",
    "ThreadId": "12824",
    "Html": "\r\nOisin,<br /><br />Thnaks for the reply.  I am new at this myself.  I see events, but cannot read the data.  <br /><br />If I copy the event to a variable, I see:<br /><br />Occurred                      Source                        Name                          Args<br />--------                      ------                        ----                          ----<br />7/24/2007 11:00:20 AM         System.Management.Automati... DataReceived                  System.IO.Ports.SerialData...<br /><br />There is a args.Chars property or attribute, but I cannot read the actal data returned.<br /><br />Thanks,<br /><br />Bob <br />",
    "PostedDate": "2007-07-24T08:08:05.59-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "42303",
    "ThreadId": "12824",
    "Html": "\r\nOisin,<br /><br />Got it working!<br /><br />Here's the code:<br /><br />. ./eventhandler.ps1<br /><br />$port=new-Object System.IO.Ports.SerialPort COM1,1200,None,8,one<br />$port.open()<br />$port.Write(<a href=\"http://www.codeplex.com/PSEventing/Wiki/View.aspx?title=char\">char</a>13 + <a href=\"http://www.codeplex.com/PSEventing/Wiki/View.aspx?title=char\">char</a>10)<br /><br />add-eventhandler (get-variable port) DataReceived { $port.ReadExisting() } <br /><br />$port.write(\"s\")<br />$port.Write(<a href=\"http://www.codeplex.com/PSEventing/Wiki/View.aspx?title=char\">char</a>13 + <a href=\"http://www.codeplex.com/PSEventing/Wiki/View.aspx?title=char\">char</a>10)<br /><br />start-sleep -s 5<br /><br /><br />$res=do-events<br /><br />$port.Close()<br /><br />$res<a href=\"http://www.codeplex.com/PSEventing/Wiki/View.aspx?title=0\">0</a><br /><br />-----<br />Is there a way I could just use the get-event function and read the data from there?  I see the event, but how is the raw data exposed?<br /><br />The script is used to pull data in from a UPS connected to COM1.  It only needs to send a CRLF and then \"s\" + CRLF to read the status ...<br /><br />Thanks,<br /><br />Bob<br />",
    "PostedDate": "2007-07-24T09:30:34.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]