{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2007-07-14T21:33:52.64-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "If a variable goes out of scope without disconnecting the eventlistener, it will not be garbage collected as the LCG dynamic method handler is a GC root if left attached. I have a sneaky technique using an ArgumentTransformationAttribute that will unhook the handler automatically when the var goes out of scope or is overwritten with a new object reference, but it will take a little bit extra work - so, 0.6 it is.",
    "LastUpdatedDate": "2013-05-15T23:08:27.587-07:00",
    "PlannedForRelease": "PSEventing 1.0",
    "ReleaseVisibleToPublic": true,
    "Priority": {
      "Name": "Medium",
      "Severity": 100,
      "Id": 2
    },
    "ProjectName": "PSEventing",
    "ReportedDate": "2007-05-09T19:05:17.86-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Implement automatic event unhooking when variables are overwritten or go out of scope",
    "Type": {
      "Name": "Task",
      "Id": 2
    },
    "VoteCount": 1,
    "Id": 2195
  },
  "FileAttachments": [],
  "Comments": []
}